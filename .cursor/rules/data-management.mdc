---
description: 
globs: 
alwaysApply: false
---
# Data Management

This project uses Supabase for data storage, authentication, and server functions.

## Authentication

- Authentication is handled through Supabase Auth
- Auth state is managed in [src/context/AuthContext.tsx](mdc:src/context/AuthContext.tsx)
- Protected routes check auth state before rendering

## Data Fetching

### Supabase Client
- The Supabase client is configured in [src/lib/supabase.ts](mdc:src/lib/supabase.ts)
- Environment variables must be set for the client to work correctly

### React Query
- React Query is used for data fetching, caching, and state management
- Query hooks are organized by domain in the `src/hooks` directory
- The query client is configured in [src/main.tsx](mdc:src/main.tsx)

## Report Generation

- Strategy report data is processed client-side in `src/components/strategyreportgenie`
- CSV files are parsed and transformed into usable data structures
- Reports can be exported as HTML or viewed in the interactive dashboard

## Data Flow

1. User uploads trading data (CSV files)
2. Files are parsed client-side into structured data
3. Data is displayed in the dashboard with various visualizations
4. Results can be exported or saved (if authenticated)

## Edge Functions

- Supabase Edge Functions are used for server-side operations
- Functions are located in the `supabase/functions` directory
- These handle operations like email sending and data processing

